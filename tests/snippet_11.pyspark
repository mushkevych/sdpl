# File generated by SDPL compiler from tests/snippet_11.sdpl
# Do not edit the file manually
# # snippet: testing COMPUTE construct field shadowing
# # load A
A = sqlContext.read.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/table_name', schema=StructType([
    StructField('a', StringType, False),
    StructField('aa', StringType, False),
    StructField('aaa', StringType, False),
    StructField('column', BooleanType, False),
    StructField('another_column', BooleanType, False),
    StructField('yet_another_column', BooleanType, False) ])
    , sep=',')
# # load B
B = sqlContext.read.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/file_blob', schema=StructType([
    StructField('b', IntegerType, False),
    StructField('bb', IntegerType, False),
    StructField('bbb', IntegerType, False),
    StructField('column', BooleanType, False),
    StructField('another_column', BooleanType, False),
    StructField('yet_another_column', BooleanType, False) ])
    , sep=',')
# # join and compute
JOIN_A_B = A.join(B, (A.a == B.b) & (A.aa == B.bb), 'left_outer')
C = JOIN_A_B.select(
    col('a').alias('a'),
    col('aa').alias('aa'),
    col('aaa').alias('aaa'),
    col('column').alias('column'),
    col('another_column').alias('another_column'),
    col('yet_another_column').alias('yet_another_column'),
    my_function(A.aaa, B.bb, 'aaa', 123) AS func_field,
    SUM(A.aa) AS bbb,
    A.aa + B.bb AS add_field
)
# # user formatted comments ahead of STORE C
sqlContext.write.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/table_name', compression='SNAPPY', sep=',')
# SDPL output: EOF
