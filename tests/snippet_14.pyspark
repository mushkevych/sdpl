# File generated by SDPL compiler from tests/snippet_14.sdpl
# Do not edit the file manually
# # snippet: testing GROUP BY and ORDER BY construct
# # load A
A = sqlContext.read.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/table_name', schema=StructType([
    StructField('a', StringType, False),
    StructField('aa', StringType, False),
    StructField('aaa', StringType, False),
    StructField('column', BooleanType, False),
    StructField('another_column', BooleanType, False),
    StructField('yet_another_column', BooleanType, False) ])
    , sep=',')
# # load B
B = sqlContext.read.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/file_blob', schema=StructType([
    StructField('b', IntegerType, False),
    StructField('bb', IntegerType, False),
    StructField('bbb', IntegerType, False),
    StructField('column', BooleanType, False),
    StructField('another_column', BooleanType, False),
    StructField('yet_another_column', BooleanType, False) ])
    , sep=',')
# # ORDER BY clause
C = A.orderBy(A.a, A.aa, A.aaa)
# # ORDER BY clause
D = B.groupBy(B.b, B.bb, B.bbb)
# # user formatted comments ahead of STORE C
sqlContext.write.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/table_name', compression='SNAPPY', sep=',')
# # user formatted comments ahead of STORE D
sqlContext.write.csv('s3://my_bucket.s3.amazonaws.com:443/path/within/bucket/table_name', compression='SNAPPY', sep=',')
# SDPL output: EOF
